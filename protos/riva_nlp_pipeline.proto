// Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
//
// NVIDIA CORPORATION and its licensors retain all intellectual property
// and proprietary rights in and to this software, related documentation
// and any modifications thereto.  Any use, reproduction, disclosure or
// distribution of this software and related documentation without an express
// license agreement from NVIDIA CORPORATION is strictly prohibited.


syntax = "proto3";

package nvidia.riva.nlp.pipeline;

option cc_enable_arenas = true;
option go_package = "nvidia.com/riva_speech";

message TextClassificationInput {
  // Sentence to classify
  string sentence = 1;

  // Possible class labels to classify the sequence into
  repeated string classes = 2;

  // The template used to turn each label into an NLI-style hypothesis.
  // Template must include a {}.
  // Default: "This example is {}."
  string hypothesis_template = 3;

  // Whether or not multiple candidate labels can be true. If False, then the
  // scores are normalized such that the sum of the label likelihoods for each
  // sequence is 1. If True, then the labels are considered independent and
  // probabilities are normalized for each candidate by doing a softmax of the
  // entailment score vs. the contradiction score.
  bool multi_class = 4;
}

message ClassScore {
  // Class label
  string name = 1;

  // Score
  float score = 2;
}

message TextClassificationOutput {
  // Sentence which was classified
  string sentence = 1;

  // Class scores
  repeated ClassScore scores = 2;
}

message TransformTextInput{
  string sentence = 1;
}

message TransformTextOutput{
  string sentence = 1;
}
